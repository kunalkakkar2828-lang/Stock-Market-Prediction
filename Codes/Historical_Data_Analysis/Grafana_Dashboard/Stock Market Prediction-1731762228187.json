{
  "__inputs": [
    {
      "name": "DS_STOCK_PRICE",
      "label": "stock_price",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "candlestick",
      "name": "Candlestick",
      "version": ""
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "10.4.0"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "piechart",
      "name": "Pie chart",
      "version": ""
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "This dashboard is for Advanced Stock Price Forecasting Using a Hybrid Model of Numerical and Textual Analysis.",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 11,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows description about stock market.",
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 0,
            "y": 281
          },
          "id": 20,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "## Stock Market Overview\n\nThe stock market is a complex system where investors buy and sell shares of publicly traded companies. Understanding fundamental concepts and terminologies is essential for navigating and analyzing market activities effectively.\n\n### 1. **What is the Stock Market?**\n\n- **Definition**: A platform where investors can buy and sell shares of publicly listed companies.\n- **Components**:\n  - **Stock Exchanges**: Physical or electronic venues where trading occurs (e.g., NYSE, NASDAQ, BSE).\n  - **Listed Companies**: Businesses that have issued shares to the public through an initial public offering (IPO).\n  - **Investors**: Individuals or institutions that purchase shares to gain ownership stakes and potential returns.\n\n### 2. **Key Terminologies**\n\n#### a. **Stock (Share)**\n\n- **Definition**: A unit of ownership in a company.\n- **Types**:\n  - **Common Stock**: Provides voting rights and potential dividends.\n  - **Preferred Stock**: Typically no voting rights but has a higher claim on assets and dividends.\n\n#### b. **Stock Exchange**\n\n- **Definition**: An organized market where securities are bought and sold.\n- **Examples**:\n  - **New York Stock Exchange (NYSE)**\n  - **NASDAQ**\n  - **Bombay Stock Exchange (BSE)**\n\n#### c. **Index**\n\n- **Definition**: A statistical measure representing the performance of a group of stocks.\n- **Examples**:\n  - **BSE Sensex (BSESN)**: Tracks 30 major companies on the BSE.\n  - **S&P 500**: Tracks 500 large-cap U.S. companies.\n  - **NASDAQ Composite**: Includes over 3,000 stocks listed on NASDAQ.\n\n#### d. **Bid and Ask Price**\n\n- **Bid Price**: The highest price a buyer is willing to pay for a stock.\n- **Ask Price**: The lowest price a seller is willing to accept for a stock.\n- **Spread**: The difference between the bid and ask prices.\n\n#### e. **Market Order vs. Limit Order**\n\n- **Market Order**: An order to buy or sell immediately at the current market price.\n- **Limit Order**: An order to buy or sell at a specific price or better.\n\n#### f. **Volume**\n\n- **Definition**: The number of shares traded during a specific period.\n- **Significance**: Indicates the activity level and liquidity of a stock.\n\n#### g. **Volatility**\n\n- **Definition**: A measure of how much a stock's price fluctuates over a given period.\n- **Types**:\n  - **High Volatility**: Large price swings, indicating higher risk.\n  - **Low Volatility**: Smaller price movements, indicating lower risk.\n\n#### h. **Liquidity**\n\n- **Definition**: The ease with which a stock can be bought or sold without affecting its price.\n- **High Liquidity**: Stocks can be traded quickly with minimal price impact.\n- **Low Liquidity**: Trades may significantly impact the stock price.\n\n#### i. **Dividend**\n\n- **Definition**: A portion of a company's earnings distributed to shareholders.\n- **Types**:\n  - **Cash Dividend**: Paid in cash.\n  - **Stock Dividend**: Paid in additional shares.\n\n### 3. **How the Stock Market Works**\n\n- **Initial Public Offering (IPO)**:\n\n  - **Definition**: The process by which a private company offers shares to the public for the first time.\n  - **Purpose**: To raise capital for expansion, pay off debt, or provide liquidity to existing shareholders.\n\n- **Secondary Market**:\n\n  - **Definition**: The market where previously issued securities are traded among investors.\n  - **Function**: Provides liquidity and enables price discovery.\n\n- **Trading Mechanism**:\n  - **Order Matching**: Buy and sell orders are matched through an exchange's order book.\n  - **Execution**: Once matched, the trade is executed, and ownership of the shares is transferred.\n\n### 4. **Investment Strategies**\n\n#### a. **Fundamental Analysis**\n\n- **Definition**: Evaluating a company's financial health, performance, and intrinsic value.\n- **Components**:\n  - **Financial Statements**: Income statement, balance sheet, cash flow statement.\n  - **Ratios**: Price-to-earnings (P/E), debt-to-equity, return on equity (ROE).\n  - **Qualitative Factors**: Management quality, competitive advantage, industry conditions.\n\n#### b. **Technical Analysis**\n\n- **Definition**: Analyzing statistical trends from trading activity, such as price and volume.\n- **Tools**:\n  - **Charts**: Line charts, bar charts, candlestick charts.\n  - **Indicators**: Moving averages, Relative Strength Index (RSI), MACD.\n\n#### c. **Quantitative Analysis**\n\n- **Definition**: Using mathematical and statistical models to evaluate securities.\n- **Approach**:\n  - **Algorithmic Trading**: Automated trading based on predefined criteria.\n  - **Risk Management Models**: Assessing and mitigating financial risks.\n\n### 5. **Risk and Return**\n\n- **Risk**: The possibility of losing some or all of the invested capital.\n- **Return**: The gain or loss generated by an investment.\n- **Risk-Return Tradeoff**: Higher potential returns typically come with higher risk.\n\n### 6. **Regulatory Bodies**\n\n- **Securities and Exchange Commission (SEC)**: U.S. regulatory body overseeing securities markets.\n- **Securities and Exchange Board of India (SEBI)**: Regulatory authority for securities markets in India.\n- **Role**:\n  - **Protecting Investors**: Ensuring transparency and fairness in the markets.\n  - **Regulating Exchanges**: Setting rules and guidelines for trading activities.\n  - **Preventing Fraud**: Detecting and penalizing fraudulent activities.\n\n### 7. **Market Participants**\n\n- **Retail Investors**: Individual investors buying and selling securities for personal accounts.\n- **Institutional Investors**: Entities like mutual funds, pension funds, and insurance companies managing large portfolios.\n\n### 8. **Bull and Bear Markets**:\n\n- A **bull market** refers to a phase where stock prices are rising or are expected to rise, signaling optimism and confidence among investors.\n- A **bear market** describes a situation where prices are falling or are expected to fall, reflecting pessimism and caution in the market. Investors typically take long positions during bull markets and short positions during bear markets, depending on their market outlook.",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "title": "Stock Market",
          "transparent": true,
          "type": "text"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows description about the project.",
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 12,
            "y": 281
          },
          "id": 21,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "<h3>Project Description</h3>\n    <p>This project aims to analyze and visualize the trends in the stock market using historical financial data. The data is retrieved from Yahoo Finance and analyzed using Python libraries like Pandas and Matplotlib. The visualizations include line graphs, candlestick charts, and scatter plots to showcase the trends in stock prices and volumes.</p>\n\n    <img src=\"https://img.freepik.com/premium-vector/flat-design-stock-market-analysis_23-2148590818.jpg\" style=\"width: 100%;\">\n    \n    <br>\n    <br>\n    <h3>Project Overview</h3>\n\n    <p>Our project aims to forecast stock prices by combining numerical data and textual analysis. We utilize historical stock data and insights from financial news to create a robust prediction model.</p>\n\n    <h4>Methodology</h4>\n\n    <ol>\n        <li><strong>Data Collection</strong>: We gather historical stock prices of major companies and store them in an InfluxDB database for efficient time-series analysis.</li>\n        <li><strong>Data Visualization</strong>: We use Grafana to create dashboards that visualize stock prices and forecast outcomes in real-time.</li>\n        <li><strong>Textual Analysis</strong>: Using Natural Language Processing (NLP) tools like NLTK and spaCy, we analyze financial news to gain insights that enhance our predictions.</li>\n        <li><strong>Machine Learning</strong>: We are experimenting with advanced models such as ARIMA, LSTM, and Transformers, integrating both numerical and textual data to improve forecasting accuracy.</li>\n        <li><strong>Collaboration</strong>: The project is managed through GitHub, allowing our team to collaborate effectively and keep track of changes.</li>\n    </ol>\n\n    <h3>Tools Used</h3>\n\n    <ul>\n        <li><strong>InfluxDB</strong>: A time-series database for managing stock data.</li>\n        <li><strong>Grafana</strong>: A visualization tool for creating dashboards.</li>\n        <li><strong>NLP Libraries</strong>: NLTK and spaCy for textual analysis.</li>\n        <li><strong>Machine Learning Models</strong>: ARIMA, LSTM, and Transformers for stock price prediction.</li>\n    </ul>",
            "mode": "html"
          },
          "pluginVersion": "10.4.0",
          "title": "Project Description",
          "transparent": true,
          "type": "text"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 288
          },
          "id": 7,
          "options": {
            "code": {
              "language": "html",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Stock Market Prediction</title>\n    <style>\n        /* This style block contains CSS rules to style the body and elements within the page */\n        body {\n            font-family: Arial, sans-serif;\n            /* Sets the font style for the body */\n            margin: 0;\n            /* Removes default margin */\n            padding: 20px;\n            /* Adds padding around the body */\n            text-align: center;\n            /* Centers text within the body */\n        }\n\n        h1,\n        h4 {\n            margin: 20px 0;\n            /* Adds vertical margin to heading elements */\n        }\n\n        table {\n            margin: 0 auto;\n            /* Centers the table on the page */\n            border-collapse: collapse;\n            /* Merges table borders for a cleaner look */\n            width: 80%;\n            /* Sets the table width to 80% of the container */\n            max-width: 1000px;\n            /* Sets the maximum width of the table */\n        }\n\n        th,\n        td {\n            border: 1px solid #ddd;\n            /* Defines border style for table headers and cells */\n            padding: 10px;\n            /* Adds padding within each table cell */\n            text-align: left;\n            /* Aligns text to the left in table cells */\n        }\n\n        th {\n            background-color: #f2f2f2;\n            /* Sets a light background color for table headers */\n            font-weight: bold;\n            /* Makes table headers bold */\n        }\n\n        .company-logo {\n            width: 40px;\n            /* Sets width of the company logo */\n            height: 40px;\n            /* Sets height of the company logo */\n            margin-right: 10px;\n            /* Adds spacing to the right of the logo */\n            vertical-align: middle;\n            /* Vertically aligns the logo with the text */\n        }\n\n        .left-aligned {\n            text-align: left;\n            /* Aligns bullet points to the left */\n            margin: 0;\n            /* Removes margin for the list */\n        }\n\n        .company-info {\n            text-align: center;\n            /* Centers the logo and company name */\n            margin-bottom: 20px;\n            /* Adds spacing below company info */\n        }\n\n        .tcs-spacing div {\n            margin-top: 10px;\n            /* Adjust the value to increase or decrease spacing */\n        }\n    </style>\n</head>\n\n<body>\n\n    <h1>Datasets Used</h1>\n    <h4>This are all the datasets that are used in the analysis.</h4>\n\n    <table>\n        <thead>\n            <tr>\n                <th>Company</th>\n                <th>Description</th>\n                <th>Data Range</th>\n                <th>Dataset Shape</th>\n                <th>Starting Stock Date</th>\n                <th>Current Stock Date</th>\n                <th>Starting Stock Price</th>\n                <th>Current Stock Price</th>\n            </tr>\n        </thead>\n        <tbody>\n            <!-- Each table row represents a different company with its stock information -->\n\n            <!-- Google -->\n            <tr>\n                <td>\n                    <div class=\"company-info\">\n                        <img src=\"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-png-suite-everything-you-need-know-about-google-newest-0.png\"\n                            class=\"company-logo\" alt=\"Google Logo\">\n                        <div>Alphabet Inc. (Google) [GOOG]</div> <!-- Displays company name -->\n                    </div>\n                </td>\n                <td>Specializes in Internet-related services and products, including search engines, online advertising,\n                    and cloud computing.</td>\n                <td>2014-03-27 : 2024-10-17</td>\n                <td>(2659, 5)</td>\n                <td>2014-03-27</td>\n                <td>2024-10-17</td>\n                <td>$27.8542</td>\n                <td>$164.51</td>\n            </tr>\n\n            <!-- Amazon -->\n            <tr>\n                <td>\n                    <div class=\"company-info\">\n                        <img src=\"https://pngimg.com/uploads/amazon/amazon_PNG5.png\" class=\"company-logo\"\n                            alt=\"Amazon Logo\">\n                        <div>Amazon.com Inc. [AMZN]</div> <!-- Displays company name -->\n                    </div>\n                </td>\n                <td>Started as an online bookstore, now a leader in e-commerce and cloud computing through AWS.</td>\n                <td>1997-05-16 : 2024-10-17</td>\n                <td>(6901, 5)</td>\n                <td>1997-05-16</td>\n                <td>2024-10-17</td>\n                <td>$0.0863</td>\n                <td>$187.53</td>\n            </tr>\n\n            <!-- Apple -->\n            <tr>\n                <td>\n                    <div class=\"company-info\">\n                        <img src=\"https://th.bing.com/th/id/R.0ac491574e7ddb71dc2cab65a8bb501f?rik=5NzURUJ1L37UYg&riu=http%3a%2f%2fpurepng.com%2fpublic%2fuploads%2flarge%2fpurepng.com-apple-logologobrand-logoiconslogos-251519938788qhgdl.png&ehk=kQ%2bTI4imrP%2fg9UWIfehFMJOqAn1A3RQTROHV%2f1ORknk%3d&risl=&pid=ImgRaw&r=0\"\n                            class=\"company-logo\" alt=\"Apple Logo\">\n                        <div>Apple Inc. [AAPL]</div> <!-- Displays company name -->\n                    </div>\n                </td>\n                <td>Renowned for innovative consumer electronics, software, and services, including the iPhone and Mac\n                    computers.</td>\n                <td>1980-12-12 : 2024-10-17</td>\n                <td>(11053, 5)</td>\n                <td>1980-12-12</td>\n                <td>2024-10-17</td>\n                <td>$0.0992</td>\n                <td>$232.15</td>\n            </tr>\n\n            <!-- Meta Platforms -->\n            <tr>\n                <td>\n                    <div class=\"company-info\">\n                        <img src=\"https://static.vecteezy.com/system/resources/previews/024/273/862/original/meta-logo-transparent-free-png.png\"\n                            class=\"company-logo\" alt=\"Meta Logo\">\n                        <div>Meta Platforms [META]</div>\n                    </div>\n                </td>\n                <td>Owner of Facebook, a global leader in social media and digital advertising.</td>\n                <td>2012-05-18 : 2024-10-17</td>\n                <td>(3124, 5)</td>\n                <td>2012-05-18</td>\n                <td>2024-10-17</td>\n                <td>$38.1174</td>\n                <td>$576.93</td>\n            </tr>\n            <!-- Microsoft -->\n            <tr>\n                <td>\n                    <div class=\"company-info\">\n                        <img src=\"https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg\"\n                            class=\"company-logo\" alt=\"Microsoft Logo\">\n                        <div>Microsoft Corp. [MSFT]</div>\n                    </div>\n                </td>\n                <td>A leading developer of software, consumer electronics, and personal computers.</td>\n                <td>1986-03-13 : 2024-10-17</td>\n                <td>(9728, 5)</td>\n                <td>1986-03-13</td>\n                <td>2024-10-17</td>\n                <td>$0.0603</td>\n                <td>$416.72</td>\n            </tr>\n            <!-- Netflix -->\n            <tr>\n                <td>\n                    <div class=\"company-info\">\n                        <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n                            class=\"company-logo\" alt=\"Netflix Logo\">\n                        <div>Netflix Inc. [NFLX]</div>\n                    </div>\n                </td>\n                <td>Global streaming entertainment service with a vast library of TV series and films.</td>\n                <td>2002-05-23 : 2024-10-17</td>\n                <td>(5640, 5)</td>\n                <td>2002-05-23</td>\n                <td>2024-10-17</td>\n                <td>$1.1964</td>\n                <td>$687.65</td>\n            </tr>\n            <!-- Nvidia -->\n            <tr>\n                <td>\n                    <div class=\"company-info\">\n                        <img src=\"https://cdn4.iconfinder.com/data/icons/logos-and-brands/512/235_Nvidia_logo-512.png\"\n                            class=\"company-logo\" alt=\"Nvidia Logo\">\n                        <div>Nvidia Corp. [NVDA]</div>\n                    </div>\n                </td>\n                <td>Specializes in graphics processing units and AI technology.</td>\n                <td>1999-01-22 : 2024-10-17</td>\n                <td>(6477, 5)</td>\n                <td>1999-01-22</td>\n                <td>2024-10-17</td>\n                <td>$0.0377</td>\n                <td>$136.93</td>\n            </tr>\n            <!-- Tata Consultancy Services (TCS) -->\n            <tr>\n                <td>\n                    <div class=\"company-info tcs-spacing\">\n                        <img src=\"https://companieslogo.com/img/orig/TCS.NS-7401f1bd.png?t=1631949260\"\n                            class=\"company-logo\" alt=\"TCS Logo\">\n                        <div>Tata Consultancy Services [TCS]</div>\n                    </div>\n\n                </td>\n                <td>Leading global IT services, consulting, and business solutions provider.</td>\n                <td>2013-11-01 : 2024-10-17</td>\n                <td>(2758, 5)</td>\n                <td>2013-11-01</td>\n                <td>2024-10-17</td>\n                <td>$543.0</td>\n                <td>$11.8</td>\n            </tr>\n        </tbody>\n    </table>\n\n    <div>\n        <h2>Current Progress</h2>\n        <p>For the project, Advanced Stock Price Forecasting Using a Hybrid Model of Numerical and Textual Analysis,\n            substantial progress has been made across different areas. Currently, we are analyzing relevant\n            research papers and exploring the most suitable dataset for our needs. Since the project involves\n            time-series data, we are learning to use Influx DB for efficient data storage, which will allow us to\n            handle large-scale time-series data effectively.</p>\n        <ul class=\"left-aligned\">\n            <li>Analyzing research papers and exploring datasets</li>\n            <li>Learning Influx DB for time-series data storage</li>\n            <li>Focusing on Natural Language Processing (NLP) for financial news analysis</li>\n            <li>Evaluating tools like NLTK and spaCy</li>\n            <li>Learning Grafana for data visualization and dashboards</li>\n            <li>Studying advanced machine learning algorithms: ARIMA, LSTM, and Transformers</li>\n            <li>Implementing a hybrid model that combines numerical and textual analysis techniques</li>\n        </ul>\n    </div>\n    <br>\n    <div>\n        <h2>1. Historical Data</h2>\n        <p>The default range is set to: <b>2014-03-27 00:00:00 : 2024-10-17 00:00:00</b></p>\n        <p>All company data is present for this interval.</p>\n    </div>\n    <br>\n    <div>\n        <h2>2. Model Prediction</h2>\n        <ol class=\"left-aligned\">\n            <li>Model output will be displayed here</li>\n            <li>Numerical Analysis: Description of numerical analysis methods used in the project.</li>\n            <li>Time-series Analysis: Description of time-series analysis techniques.</li>\n            <li>Predictive Modeling: Overview of predictive modeling approaches.</li>\n        </ol>\n    </div>\n    <br>\n    <div>\n        <h2>3. Textual Analysis</h2>\n        <ol class=\"left-aligned\">\n            <li>Text analysis graphs/data will be added here</li>\n            <li>Description of textual analysis techniques used.</li>\n            <li>Tools and libraries utilized for NLP.</li>\n        </ol>\n    </div>\n\n    <br>\n    <div>\n        <h2>4. Hybrid Model</h2>\n        <p>Description of the hybrid model used for stock price prediction, integrating both numerical and textual\n            analysis.</p>\n        <ol class=\"left-aligned\">\n            <li>Integration of numerical analysis techniques with textual analysis.</li>\n            <li>Utilization of advanced machine learning algorithms.</li>\n            <li>Emphasis on predictive accuracy and performance metrics.</li>\n            <li>Real-time data processing and analysis capabilities.</li>\n        </ol>\n    </div>\n</body>\n\n</html>",
            "mode": "html"
          },
          "pluginVersion": "10.4.0",
          "title": "Dashboard Description and Datasets Information",
          "transparent": true,
          "type": "text"
        }
      ],
      "title": "Stock Market and Project Dashboard Overview",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 2,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the current stock price for the selected company.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Opening Price"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Low Price"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "High Price"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Closing Price"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "E"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Volume"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 154
          },
          "id": 42,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"open\")\r\n  |> last()\r\n",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"low\")\r\n  |> last()\r\n",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"high\")\r\n  |> last()\r\n",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")\r\n  |> last()\r\n",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"volume\")\r\n  |> last()\r\n",
              "refId": "E"
            }
          ],
          "title": "Current Stock Price for ${Company}",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the candlestick chart for the Selected Company Stocks.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Opening Price"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Low Price"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "High Price"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "E"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Volume"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 154
          },
          "id": 45,
          "options": {
            "candleStyle": "candles",
            "colorStrategy": "open-close",
            "colors": {
              "down": "red",
              "up": "green"
            },
            "includeAllFields": false,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "mode": "candles+volume"
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"open\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"low\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"high\")",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"volume\")",
              "refId": "E"
            }
          ],
          "title": "Candlestick Chart for ${Company}",
          "type": "candlestick"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel displays the stock prices of a company based on selected ticker symbol.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "custom.drawStyle",
                    "value": "line"
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Opening Price"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Low Price"
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "High Price"
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 162
          },
          "id": 1,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"open\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"low\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"high\")",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "D"
            }
          ],
          "title": "Stock Prices for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the opening Price of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Opening Price for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 171
          },
          "id": 3,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"open\")",
              "refId": "A"
            }
          ],
          "title": "Opening Price for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Low Price of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Low Price for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 171
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"low\")",
              "refId": "A"
            }
          ],
          "title": "Low Price for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the high Price of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "red",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "High Price for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 179
          },
          "id": 5,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"high\")",
              "refId": "A"
            }
          ],
          "title": "High Price for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Closing Price of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#73BF69",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Closing Price for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 179
          },
          "id": 6,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "A"
            }
          ],
          "title": "Closing Price for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "purple",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Volume for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 187
          },
          "id": 12,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"volume\")",
              "refId": "A"
            }
          ],
          "title": "Volume for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the close price and moving average of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Opening Price for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Closing Price"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#ff7f50",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "fill": "solid"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "20-Day Moving Average"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#008080",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 194
          },
          "id": 23,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"moving_average\")",
              "refId": "B"
            }
          ],
          "title": "Moving Average for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the opening Price of the stock. Here red threshold shows overbought and yellow shows oversold.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "dashed+area"
                }
              },
              "displayName": "RSI for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "#EAB839",
                    "value": 30
                  },
                  {
                    "color": "red",
                    "value": 70
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 194
          },
          "id": 24,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rsi\")",
              "refId": "A"
            }
          ],
          "title": "RSI for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Closing Price of the stock for all companies.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#73BF69",
                "mode": "palette-classic-by-name"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for AAPL"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for AMZN"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for GOOG"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for META"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "E"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for MSFT"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "F"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for NFLX"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "G"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for NVDA"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#2a0eda",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "H"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for TCS"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#dd15b3",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 202
          },
          "id": 27,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AAPL\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AMZN\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"GOOG\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"META\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"MSFT\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "E"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NFLX\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "F"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NVDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "G"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"TCS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "H"
            }
          ],
          "title": "Closing Price for Companies",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Moving Average of the stock for all companies.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#73BF69",
                "mode": "palette-classic-by-name"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for AAPL"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for AMZN"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for GOOG"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for META"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "E"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for MSFT"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "F"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for NFLX"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "G"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for NVDA"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#2a0eda",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "H"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for TCS"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#dd15b3",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 202
          },
          "id": 28,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AAPL\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"moving_average\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AMZN\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"moving_average\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"GOOG\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"moving_average\")",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"META\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"moving_average\")",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"MSFT\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"moving_average\")",
              "refId": "E"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NFLX\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"moving_average\")",
              "refId": "F"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NVDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"moving_average\")",
              "refId": "G"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"TCS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"moving_average\")",
              "refId": "H"
            }
          ],
          "title": "Moving Average for Companies",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Moving Average of the stock for all companies.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#73BF69",
                "mode": "palette-classic-by-name"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "dashed+area"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "#EAB839",
                    "value": 30
                  },
                  {
                    "color": "red",
                    "value": 70
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for AAPL"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for AMZN"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for GOOG"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for META"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "E"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for MSFT"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "F"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for NFLX"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "G"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for NVDA"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#2a0eda",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "H"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for TCS"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#dd15b3",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 210
          },
          "id": 29,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AAPL\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rsi\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AMZN\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rsi\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"GOOG\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rsi\")",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"META\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rsi\")",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"MSFT\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rsi\")",
              "refId": "E"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NFLX\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rsi\")",
              "refId": "F"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NVDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rsi\")",
              "refId": "G"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"TCS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rsi\")",
              "refId": "H"
            }
          ],
          "title": "RSI for Companies",
          "type": "timeseries"
        }
      ],
      "title": "Numerical Analysis",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 8,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the evaluation metrics of models for company stocks.",
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 91
          },
          "id": 19,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Regression Model Performance</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n        }\n        h1 {\n            text-align: center;\n        }\n        table {\n            border-collapse: collapse;\n            width: 80%;\n            margin: auto;\n        }\n        th, td {\n            border: 1px solid #ddd;\n            padding: 10px;\n            text-align: left;\n        }\n        th {\n            background-color: #f2f2f2;\n        }\n        .description {\n            margin-bottom: 20px;\n            text-align: center;\n            font-size: 16px;\n        }\n    </style>\n</head>\n<body>\n\n    <h1>Regression Model Performance Overview</h1>\n    <p class=\"description\">This table presents the performance of various regression models for different companies. We have utilized an ensemble model approach to enhance prediction accuracy.</p>\n\n    <table>\n        <tr>\n            <th>Company</th>\n            <th>Linear Regression</th>\n            <th>Ridge Regression</th>\n            <th>Lasso Regression</th>\n            <th>Elastic Net Regression</th>\n        </tr>\n        <tr>\n            <td>Apple (AAPL)</td>\n            <td>0.9998629224782566</td>\n            <td>0.9998630076573156</td>\n            <td>0.9993577928176817</td>\n            <td>0.9996487306800625</td>\n        </tr>\n        <tr>\n            <td>Amazon (AMZN)</td>\n            <td>0.999084553005321</td>\n            <td>0.9961820949085249</td>\n            <td>0.9961820949085249</td>\n            <td>0.9965084504390407</td>\n        </tr>\n        <tr>\n            <td>Google (GOOG)</td>\n            <td>0.9992315300913325</td>\n            <td>0.9992317269769614</td>\n            <td>0.9973035403402394</td>\n            <td>0.9973876081990091</td>\n        </tr>\n        <tr>\n            <td>Microsoft (MSFT)</td>\n            <td>0.9992315300913325</td>\n            <td>0.9998440164467663</td>\n            <td>0.9993642265769165</td>\n            <td>0.9994838523467628</td>\n        </tr>\n        <tr>\n            <td>Meta (META)</td>\n            <td>0.9992315300913325</td>\n            <td>0.9992317269769614</td>\n            <td>0.9973035403402394</td>\n            <td>0.9973876081990091</td>\n        </tr>\n        <tr>\n            <td>Netflix (NFLX)</td>\n            <td>0.9992198305734726</td>\n            <td>0.9992198288782033</td>\n            <td>0.9971600744221598</td>\n            <td>0.9971700356054888</td>\n        </tr>\n        <tr>\n            <td>NVIDIA (NVDA)</td>\n            <td>0.9971063606802831</td>\n            <td>0.998365397592374</td>\n            <td>0.9940339650281499</td>\n            <td>0.9972701576306695</td>\n        </tr>\n        <tr>\n            <td>Tata Consultancy Services (TCS)</td>\n            <td>0.9979612118835919</td>\n            <td>0.9979612934362246</td>\n            <td>0.9890586523727406</td>\n            <td>0.9891227853737217</td>\n        </tr>\n    </table>\n\n</body>\n</html>\n",
            "mode": "html"
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "",
              "refId": "A"
            }
          ],
          "title": "${Company} Model Evaluation",
          "transparent": true,
          "type": "text"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the predicted current stock price for the selected company.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Opening Price"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Low Price"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "High Price"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Closing Price"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "E"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Volume"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 99
          },
          "id": 43,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"open\")\r\n  |> last()\r\n",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"low\")\r\n  |> last()\r\n",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"high\")\r\n  |> last()\r\n",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")\r\n  |> last()\r\n",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"volume\")\r\n  |> last()\r\n",
              "refId": "E"
            }
          ],
          "title": "Predicted Current Stock Price for ${Company}",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the candlestick chart for the Selected Company Stocks.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 99
          },
          "id": 46,
          "options": {
            "candleStyle": "candles",
            "colorStrategy": "open-close",
            "colors": {
              "down": "red",
              "up": "green"
            },
            "includeAllFields": false,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "mode": "candles+volume"
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")",
              "refId": "A"
            }
          ],
          "title": "Candlestick Chart for ${Company}",
          "type": "candlestick"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel displays the stock prices of a company based on selected ticker symbol.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "custom.drawStyle",
                    "value": "line"
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Opening Price"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Low Price"
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "High Price"
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Predicted Closing Price"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "E"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "fill": "solid"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Actual Closing Price"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 107
          },
          "id": 15,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"open\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"low\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"high\")",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "E"
            }
          ],
          "title": "Stock Prices of ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the model prediction for the company along with the original value.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Predicted Closing Price"
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "fill": "solid"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Actual Closing Price"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 107
          },
          "id": 13,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"close\")",
              "refId": "B"
            }
          ],
          "title": "Model Prediction for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the opening Price of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Opening Price for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 115
          },
          "id": 16,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"open\")",
              "refId": "A"
            }
          ],
          "title": "Opening Price for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Low Price of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Low Price for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 115
          },
          "id": 17,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"low\")",
              "refId": "A"
            }
          ],
          "title": "Low Price for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the high Price of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "red",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "High Price for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 123
          },
          "id": 18,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"high\")",
              "refId": "A"
            }
          ],
          "title": "High Price for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the model prediction for the company original value.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Predicted Closing Price"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 123
          },
          "id": 14,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")",
              "refId": "A"
            }
          ],
          "title": "Predicted Closing Price for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the volume for the company.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "purple",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Volume for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 131
          },
          "id": 22,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"volume\")",
              "refId": "A"
            }
          ],
          "title": "Volume for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the close price and moving average of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Opening Price for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Predicted Closing Price"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#ff7f50",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "fill": "solid"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "20-Day Moving Average"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#008080",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 138
          },
          "id": 25,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_moving_average\")",
              "refId": "B"
            }
          ],
          "title": "Moving Average for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the rsi of the stock. Here red threshold shows overbought and yellow shows oversold.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "dashed+area"
                }
              },
              "displayName": "RSI for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "yellow",
                    "value": 30
                  },
                  {
                    "color": "red",
                    "value": 70
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 138
          },
          "id": 26,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"${Company}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_rsi\")",
              "refId": "A"
            }
          ],
          "title": "RSI for ${Company}",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the predicted Closing Price of the stock for all companies.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#73BF69",
                "mode": "palette-classic-by-name"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for AAPL"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for AMZN"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for GOOG"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for META"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "E"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for MSFT"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "F"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for NFLX"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "G"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for NVDA"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#2a0eda",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "H"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Closing Price for TCS"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#dd15b3",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 146
          },
          "id": 30,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AAPL\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AMZN\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"GOOG\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"META\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"MSFT\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")",
              "refId": "E"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NFLX\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")",
              "refId": "F"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NVDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")",
              "refId": "G"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"TCS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")",
              "refId": "H"
            }
          ],
          "title": "Predicted Closing Price for Companies",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Moving Average of the stock for all companies.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#73BF69",
                "mode": "palette-classic-by-name"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for AAPL"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for AMZN"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for GOOG"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for META"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "E"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for MSFT"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "F"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for NFLX"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "G"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for NVDA"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#2a0eda",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "H"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Moving Average for TCS"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#dd15b3",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 146
          },
          "id": 31,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AAPL\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_moving_average\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AMZN\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_moving_average\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"GOOG\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_moving_average\")",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"META\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_moving_average\")",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stock_price\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"MSFT\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"moving_average\")",
              "refId": "E"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NFLX\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_moving_average\")",
              "refId": "F"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NVDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_moving_average\")",
              "refId": "G"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"TCS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_moving_average\")",
              "refId": "H"
            }
          ],
          "title": "Moving Average for Companies",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Moving Average of the stock for all companies.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#73BF69",
                "mode": "palette-classic-by-name"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "dashed+area"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "#EAB839",
                    "value": 30
                  },
                  {
                    "color": "red",
                    "value": 70
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for AAPL"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for AMZN"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for GOOG"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for META"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "E"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for MSFT"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "F"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for NFLX"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "G"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for NVDA"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#2a0eda",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "H"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RSI for TCS"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#dd15b3",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 154
          },
          "id": 32,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AAPL\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_rsi\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"AMZN\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_rsi\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"GOOG\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_rsi\")",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"META\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_rsi\")",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"MSFT\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_rsi\")",
              "refId": "E"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NFLX\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_rsi\")",
              "refId": "F"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"NVDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_rsi\")",
              "refId": "G"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"model_prediction\")\r\n  |> filter(fn: (r) => r[\"Ticker\"] == \"TCS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_rsi\")",
              "refId": "H"
            }
          ],
          "title": "RSI for Companies",
          "type": "timeseries"
        }
      ],
      "title": "Model Prediction",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 10,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the model evaluation metrics for text classification models.",
          "gridPos": {
            "h": 7,
            "w": 7,
            "x": 0,
            "y": 4
          },
          "id": 35,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "<table border=\"1\">\n  <thead>\n    <tr>\n      <th>Metric</th>\n      <th>Logistic Regression</th>\n      <th>Naive Bayes</th>\n      <th>Random Forest</th>\n    </tr>\n  </thead>\n  <tbody>\n      <td>Accuracy</td>\n      <td>0.6516</td>\n      <td>0.6672</td>\n      <td>0.9900</td>\n    </tr>\n    <!-- Class 0 -->\n    <tr>\n      <td>Class 0 Precision</td>\n      <td>0.62</td>\n      <td>0.65</td>\n      <td>0.99</td>\n    </tr>\n    <tr>\n      <td>Class 0 Recall</td>\n      <td>0.82</td>\n      <td>0.77</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <td>Class 0 F1-Score</td>\n      <td>0.71</td>\n      <td>0.70</td>\n      <td>0.99</td>\n    </tr>\n    <tr>\n      <td>Class 0 Support</td>\n      <td>2395</td>\n      <td>2395</td>\n      <td>2395</td>\n    </tr>\n    <!-- Class 1 -->\n    <tr>\n      <td>Class 1 Precision</td>\n      <td>0.72</td>\n      <td>0.70</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <td>Class 1 Recall</td>\n      <td>0.48</td>\n      <td>0.56</td>\n      <td>0.98</td>\n    </tr>\n    <tr>\n      <td>Class 1 F1-Score</td>\n      <td>0.57</td>\n      <td>0.62</td>\n      <td>0.99</td>\n    </tr>\n    <tr>\n      <td>Class 1 Support</td>\n      <td>2304</td>\n      <td>2304</td>\n      <td>2304</td>\n    </tr>\n    <!-- Overall Metrics -->\n    <tr>\n      <td>Macro Avg Precision</td>\n      <td>0.67</td>\n      <td>0.67</td>\n      <td>0.99</td>\n    </tr>\n    <tr>\n      <td>Macro Avg Recall</td>\n      <td>0.65</td>\n      <td>0.67</td>\n      <td>0.99</td>\n    </tr>\n    <tr>\n      <td>Macro Avg F1-Score</td>\n      <td>0.64</td>\n      <td>0.66</td>\n      <td>0.99</td>\n    </tr>\n    <tr>\n      <td>Weighted Avg Precision</td>\n      <td>0.67</td>\n      <td>0.67</td>\n      <td>0.99</td>\n    </tr>\n    <tr>\n      <td>Weighted Avg Recall</td>\n      <td>0.65</td>\n      <td>0.67</td>\n      <td>0.99</td>\n    </tr>\n    <tr>\n      <td>Weighted Avg F1-Score</td>\n      <td>0.64</td>\n      <td>0.66</td>\n      <td>0.99</td>\n    </tr>\n    <tr>\n      <td>Total Support</td>\n      <td>4699</td>\n      <td>4699</td>\n      <td>4699</td>\n    </tr>\n  </tbody>\n</table>\n",
            "mode": "html"
          },
          "pluginVersion": "10.4.0",
          "title": "Model Evaluation Classification",
          "transparent": true,
          "type": "text"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the stat for actual classes.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Down"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Up"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 7,
            "y": 4
          },
          "id": 40,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"actual_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 0)  // Filter for 0 values\r\n  |> count()  // Count occurrences of 0\r\n  |> yield(name: \"count_0\")\r\n",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"actual_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 1)  // Filter for 1 values\r\n  |> count()  // Count occurrences of 1\r\n  |> yield(name: \"count_1\")",
              "refId": "B"
            }
          ],
          "title": "Actual Classes",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the stat for predicted classes.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Down"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Up"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 7,
            "w": 9,
            "x": 15,
            "y": 4
          },
          "id": 41,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 0)  // Filter for 0 values\r\n  |> count()  // Count occurrences of 0\r\n  |> yield(name: \"count_0\")\r\n",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 1)  // Filter for 1 values\r\n  |> count()  // Count occurrences of 1\r\n  |> yield(name: \"count_1\")",
              "refId": "B"
            }
          ],
          "title": "Predicted Classes",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the gauge for actual classes.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Down"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Up"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 11
          },
          "id": 39,
          "options": {
            "minVizHeight": 75,
            "minVizWidth": 75,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "sizing": "auto"
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"actual_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 0)  // Filter for 1 values\r\n  |> count()  // Count occurrences of 0\r\n  |> yield(name: \"count_0\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"actual_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 1)  // Filter for 1 values\r\n  |> count()  // Count occurrences of 1\r\n  |> yield(name: \"count_1\")",
              "refId": "B"
            }
          ],
          "title": "Actual Classes",
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the current stock for the company 0 for down and 1 for up.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 0
                  },
                  {
                    "color": "green",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Current Stock"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 4,
            "x": 8,
            "y": 11
          },
          "id": 47,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"actual_target\")\r\n  |> last()\r\n",
              "refId": "A"
            }
          ],
          "title": "Current Actual Stock",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the gauge for predicted classes.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Down"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Up"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 12,
            "y": 11
          },
          "id": 38,
          "options": {
            "minVizHeight": 75,
            "minVizWidth": 75,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "sizing": "auto"
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 0)  // Filter for 0 values\r\n  |> count()  // Count occurrences of 0\r\n  |> yield(name: \"count_0\")\r\n",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 1)  // Filter for 1 values\r\n  |> count()  // Count occurrences of 1\r\n  |> yield(name: \"count_1\")",
              "refId": "B"
            }
          ],
          "title": "Predicted Classes",
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the predicted stock for the company 0 for down and 1 for up.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 0
                  },
                  {
                    "color": "green",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Current Stock"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 4,
            "x": 20,
            "y": 11
          },
          "id": 49,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_target\")\r\n  |> first()\r\n",
              "refId": "A"
            }
          ],
          "title": "Current Predicted Stock",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the pie chart for actual classes.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": []
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Down"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Up"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 19
          },
          "id": 36,
          "options": {
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"actual_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 0)  // Filter for 0 values\r\n  |> count()  // Count occurrences of 0\r\n  |> yield(name: \"count_0\")\r\n",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"actual_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 1)  // Filter for 1 values\r\n  |> count()  // Count occurrences of 1\r\n  |> yield(name: \"count_1\")",
              "refId": "B"
            }
          ],
          "title": "Actual Classes",
          "type": "piechart"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the pie chart for predicted classes.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": []
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Down"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Stock Up"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 19
          },
          "id": 37,
          "options": {
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 0)  // Filter for 0 values\r\n  |> count()  // Count occurrences of 0\r\n  |> yield(name: \"count_0\")\r\n",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"textual_analysis\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_target\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])  // Group by measurement and field\r\n  |> filter(fn: (r) => r[\"_value\"] == 1)  // Filter for 1 values\r\n  |> count()  // Count occurrences of 1\r\n  |> yield(name: \"count_1\")",
              "refId": "B"
            }
          ],
          "title": "Predicted Classes",
          "type": "piechart"
        }
      ],
      "title": "Textual Analysis",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 9,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the hybrid model Evaluation.",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 5
          },
          "id": 33,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "<table border=\"1\">\n  <thead>\n    <tr>\n      <th>Model</th>\n      <th>MAE</th>\n      <th>MSE</th>\n      <th>RMSE</th>\n      <th>R² Score</th>\n      <th>Accuracy (%)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>MLP</td>\n      <td>4.631412</td>\n      <td>30.276025</td>\n      <td>5.502365</td>\n      <td>0.583915</td>\n      <td>99.863574</td>\n    </tr>\n    <tr>\n      <td>Linear Regression</td>\n      <td>5.725293</td>\n      <td>39.196283</td>\n      <td>6.260694</td>\n      <td>0.461323</td>\n      <td>100.000000</td>\n    </tr>\n    <tr>\n      <td>K-Nearest Neighbors (KNN)</td>\n      <td>5.575181</td>\n      <td>41.867105</td>\n      <td>6.470479</td>\n      <td>0.424618</td>\n      <td>100.000000</td>\n    </tr>\n    <tr>\n      <td>SVM</td>\n      <td>5.771079</td>\n      <td>47.432490</td>\n      <td>6.887125</td>\n      <td>0.348132</td>\n      <td>99.454297</td>\n    </tr>\n    <tr>\n      <td>Gradient Boosting</td>\n      <td>6.189361</td>\n      <td>52.197185</td>\n      <td>7.224762</td>\n      <td>0.282651</td>\n      <td>100.000000</td>\n    </tr>\n    <tr>\n      <td>Random Forest</td>\n      <td>6.378920</td>\n      <td>60.091005</td>\n      <td>7.751839</td>\n      <td>0.174165</td>\n      <td>100.000000</td>\n    </tr>\n    <tr>\n      <td>Decision Tree</td>\n      <td>6.405307</td>\n      <td>61.140660</td>\n      <td>7.819249</td>\n      <td>0.159740</td>\n      <td>100.000000</td>\n    </tr>\n    <tr>\n      <td>AdaBoost</td>\n      <td>7.360769</td>\n      <td>77.328544</td>\n      <td>8.793665</td>\n      <td>-0.062731</td>\n      <td>100.000000</td>\n    </tr>\n  </tbody>\n</table>\n",
            "mode": "markdown"
          },
          "pluginVersion": "10.4.0",
          "title": "Hybrid Model Evaluation ",
          "type": "text"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 5
          },
          "id": 65,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "<table border=\"1\">\n  <thead>\n    <tr>\n      <th>ETF</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>VOO close</td>\n      <td>The closing price of the Vanguard S&P 500 ETF (VOO), which tracks the performance of the S&P 500 Index, representing large-cap U.S. companies.</td>\n    </tr>\n    <tr>\n      <td>DIA close</td>\n      <td>The closing price of the SPDR Dow Jones Industrial Average ETF Trust (DIA), which tracks the performance of the Dow Jones Industrial Average (DJIA), representing 30 significant U.S. companies.</td>\n    </tr>\n    <tr>\n      <td>QQQ close</td>\n      <td>The closing price of the Invesco QQQ Trust (QQQ), which tracks the performance of the Nasdaq-100 Index, representing 100 of the largest non-financial companies listed on the Nasdaq stock market, often heavily weighted in technology.</td>\n    </tr>\n\n    <tr>\n      <td>Sentiment</td>\n      <td>Sentiment refers to the general market attitude or \n      outlook towards an asset, indicating whether investors' \n      emotions and opinions are positive, negative, or neutral \n      about its performance.</td>\n    </tr>\n\n\n  </tbody>\n</table>",
            "mode": "html"
          },
          "pluginVersion": "10.4.0",
          "title": "Exchange-Traded Fund Description",
          "type": "text"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the current stock price for the selected company.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "DIA Close"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "QQQ Close"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Sentiment Score"
                  },
                  {
                    "id": "unit",
                    "value": "none"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "VOO Close"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 7,
            "w": 5,
            "x": 0,
            "y": 13
          },
          "id": 50,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"dia_close\")\r\n  |> last()\r\n",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"qqq_close\")\r\n  |> last()\r\n",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sentiment\")\r\n  |> last()\r\n",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"voo_close\")\r\n  |> last()\r\n",
              "refId": "D"
            }
          ],
          "title": "Current Stock Price",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the candlestick chart for the hybrid model actual Company Stocks.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 5,
            "y": 13
          },
          "id": 54,
          "options": {
            "candleStyle": "candles",
            "colorStrategy": "open-close",
            "colors": {
              "down": "red",
              "up": "green"
            },
            "includeAllFields": false,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "mode": "candles+volume"
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"dia_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"qqq_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"voo_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "C"
            }
          ],
          "title": "Candlestick Chart for Actual Close",
          "type": "candlestick"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the predicted current stock price for the selected company.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "DIA Close"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "QQQ Close"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Sentiment Score"
                  },
                  {
                    "id": "unit",
                    "value": "none"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "VOO Close"
                  },
                  {
                    "id": "unit",
                    "value": "currencyUSD"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 11,
            "y": 13
          },
          "id": 52,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"dia_close\")\r\n  |> last()\r\n",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"qqq_close\")\r\n  |> last()\r\n",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sentiment\")\r\n  |> last()\r\n",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")\r\n  |> last()\r\n",
              "refId": "D"
            }
          ],
          "title": "Predicted Current Stock Price",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the candlestick chart for the hybrid model predicted Company Stocks.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 7,
            "x": 17,
            "y": 13
          },
          "id": 51,
          "options": {
            "candleStyle": "candles",
            "colorStrategy": "open-close",
            "colors": {
              "down": "red",
              "up": "green"
            },
            "includeAllFields": false,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "mode": "candles+volume"
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"dia_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"qqq_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "C"
            }
          ],
          "title": "Candlestick Chart for Predicted Close",
          "type": "candlestick"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This shows the line chart for the hybrid model Company Stocks.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "DIA Close"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "QQQ Close"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Sentiment Score"
                  },
                  {
                    "id": "unit",
                    "value": "none"
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "VOO Close"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "E"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Predicted Closing Price"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 7,
            "w": 9,
            "x": 0,
            "y": 20
          },
          "id": 53,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"dia_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"qqq_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sentiment\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"voo_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "D"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "E"
            }
          ],
          "title": "Stock Prices",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the DIA Price of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "DIA Price for Stocks",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 7,
            "x": 9,
            "y": 20
          },
          "id": 57,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"dia_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            }
          ],
          "title": "DIA Price for Stocks",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the QQQ Price of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "QQQ Price for Stocks",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 16,
            "y": 20
          },
          "id": 58,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"qqq_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            }
          ],
          "title": "QQQ Price for Stocks",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the VOO Close Price of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "VOO Close Price for Stocks",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 27
          },
          "id": 59,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"voo_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            }
          ],
          "title": "VOO Close Price for Stocks",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Predicted VOO Close Price of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "orange",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Predicted VOO Close Price for Stocks",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 27
          },
          "id": 64,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            }
          ],
          "title": "Predicted VOO Close Price for Stocks",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Sentiment Score of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "purple",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Sentiment Score for Stocks",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 35
          },
          "id": 60,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sentiment\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            }
          ],
          "title": "Sentiment Score for Stocks",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Sentiment Score of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "red",
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "displayName": "Sentiment Score for stocks",
              "mappings": [],
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Negative"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Neutral"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Positive"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 35
          },
          "id": 61,
          "options": {
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.4.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sentiment\")\r\n  |> filter(fn: (r) => r[\"_value\"] < 0)\r\n  |> count()\r\n",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sentiment\")\r\n  |> filter(fn: (r) => r[\"_value\"] == 0)\r\n  |> count()\r\n",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sentiment\")\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> count()\r\n",
              "refId": "C"
            }
          ],
          "title": "Sentiment Score for Stocks",
          "type": "piechart"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the actual close price and moving average of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Opening Price for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Closing Price"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#ff7f50",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "fill": "solid"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "20-Day Moving Average"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#008080",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 43
          },
          "id": 55,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"voo_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"moving_average\")",
              "refId": "B"
            }
          ],
          "title": "Moving Average for Actual Stocks",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the predicted close price and moving average of the stock.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "Opening Price for ${Company}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "currencyUSD"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Predicted Closing Price"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#ff7f50",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "fill": "solid"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "20-Day Moving Average"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#008080",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 43
          },
          "id": 56,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_close\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "hide": false,
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_moving_average\")",
              "refId": "B"
            }
          ],
          "title": "Moving Average for Predicted Stocks",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Actual Closing RSI of the stock. Here red threshold shows overbought and yellow shows oversold.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "dashed+area"
                }
              },
              "displayName": "RSI for Stocks",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "yellow",
                    "value": 30
                  },
                  {
                    "color": "red",
                    "value": 70
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 51
          },
          "id": 62,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rsi\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            }
          ],
          "title": "RSI for Actual Stocks",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_STOCK_PRICE}"
          },
          "description": "This panel shows the Predicted Closing RSI of the stock. Here red threshold shows overbought and yellow shows oversold.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "green",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "dashed+area"
                }
              },
              "displayName": "RSI for Stocks",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "yellow",
                    "value": 30
                  },
                  {
                    "color": "red",
                    "value": 70
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 51
          },
          "id": 63,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_STOCK_PRICE}"
              },
              "query": "from(bucket: \"stock_price\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hybrid_model\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"predicted_rsi\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "refId": "A"
            }
          ],
          "title": "RSI for Predicted Stocks",
          "type": "timeseries"
        }
      ],
      "title": "Hybrid Model",
      "type": "row"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "GOOG",
          "value": "GOOG"
        },
        "description": "Choose ticker symbol from here to see the corresponding stock prices",
        "hide": 1,
        "includeAll": false,
        "label": "Ticker Symbol",
        "multi": false,
        "name": "Company",
        "options": [
          {
            "selected": true,
            "text": "GOOG",
            "value": "GOOG"
          },
          {
            "selected": false,
            "text": "AAPL",
            "value": "AAPL"
          },
          {
            "selected": false,
            "text": "AMZN",
            "value": "AMZN"
          },
          {
            "selected": false,
            "text": "META",
            "value": "META"
          },
          {
            "selected": false,
            "text": "MSFT",
            "value": "MSFT"
          },
          {
            "selected": false,
            "text": "NFLX",
            "value": "NFLX"
          },
          {
            "selected": false,
            "text": "NVDA",
            "value": "NVDA"
          },
          {
            "selected": false,
            "text": "TCS",
            "value": "TCS"
          }
        ],
        "query": "GOOG, AAPL, AMZN, META, MSFT, NFLX, NVDA, TCS",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "2014-03-26T18:30:00.000Z",
    "to": "2024-10-16T18:30:00.000Z"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Stock Market Prediction",
  "uid": "be2cl3llhrmkgd",
  "version": 263,
  "weekStart": ""
}